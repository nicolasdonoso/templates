apiVersion: apps/v1
kind: Deployment
metadata:
  name: $REPO_NAME
  labels:
    name: $REPO_NAME
spec:
  replicas: $REPLICAS
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 25%
       maxUnavailable: 25%
  selector:
    matchLabels:
      name: $REPO_NAME

  template:
    metadata:
      labels:
        name: $REPO_NAME
      annotations:
        gitlab.com/job-id: "$CI_JOB_ID"
        kube_namespace: $CI_JOB_STAGE
    spec:
      securityContext:
        runAsUser: 999
      nodeSelector:
        kops.k8s.io/instancegroup: nodes
      $volume
      containers:
      - name: $REPO_NAME
        image: $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$RUN_ID
        command: ["node", "app.js"]
        $volume_mounts
        resources:
          requests:
            memory: $mem
            cpu: $cpu
          limits:
            memory: $mem
            cpu: $cpu
        ports:
        - containerPort: $CONTAINER_PORT
          name: http
        $probes
        env:
        - name: HTTP_PORT
          value: "${CONTAINER_PORT}"
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: config
              key: environment.node
        - name: LOGGER_FORMAT
          valueFrom:
            configMapKeyRef:
              name: config
              key: sockets.logger
        - name: KUBE_NAMESPACE
          value: "$CI_JOB_STAGE"
        # Redis
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: config
              key: redis.port
        - name: REDIS_HOST
          value: "${REDIS_HOST}"
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: dd-api-key
              key: dd-api-key
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ENV_NAME
          valueFrom:
            configMapKeyRef:
              name: config
              key: environment.name
        $creds
      $redis